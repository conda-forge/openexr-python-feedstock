diff --git a/OpenEXR.cpp b/OpenEXR.cpp
index 308339e09..4c2335737 100644
--- a/OpenEXR.cpp
+++ b/OpenEXR.cpp
@@ -789,7 +789,7 @@ static PyObject *outwrite(PyObject *self, PyObject *args)
     if (!PyArg_ParseTuple(args, "O!|i:writePixels", &PyDict_Type, &pixeldata, &height))
        return NULL;
 
-    ssize_t currentScanLine = file->currentScanLine();
+    Py_ssize_t currentScanLine = (Py_ssize_t) file->currentScanLine();
     if (file->header().lineOrder() == DECREASING_Y) {
         // With DECREASING_Y, currentScanLine() returns the maximum Y value of
         // the window on the first call, and decrements at each scan line.
@@ -825,7 +825,7 @@ static PyObject *outwrite(PyObject *self, PyObject *args)
             int ySampling = i.channel().ySampling;
             int yStride = typeSize * width;
             char *srcPixels;
-            ssize_t expectedSize = (height * yStride) / (xSampling * ySampling);
+            Py_ssize_t expectedSize = (height * yStride) / (xSampling * ySampling);
             Py_ssize_t bufferSize;
 
             if (PyString_Check(channel_spec)) {
@@ -1238,7 +1238,9 @@ MOD_INIT(OpenEXR)
     PyDict_SetItemString(d, "UINT", item= PyLong_FromLong(UINT)); Py_DECREF(item);
     PyDict_SetItemString(d, "HALF", item= PyLong_FromLong(HALF)); Py_DECREF(item);
     PyDict_SetItemString(d, "FLOAT", item= PyLong_FromLong(FLOAT)); Py_DECREF(item);
-    PyDict_SetItemString(d, "__version__", item= PyString_FromString(VERSION)); Py_DECREF(item);
+#define STR1(x) #x
+#define STR2(x) STR1(x)
+    PyDict_SetItemString(d, "__version__", item= PyString_FromString(STR2(VERSION))); Py_DECREF(item);
 
     return MOD_SUCCESS_VAL(m);
 }
